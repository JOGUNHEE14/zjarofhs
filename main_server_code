#1. 서버 설정 및 시작 함수

# import socket: 소켓 라이브러리를 임포트합니다. 이는 네트워크 통신을 위해 필요합니다.
# start_server(host, port): 서버를 시작하고 클라이언트의 연결을 기다립니다.
# server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM): IPv4 주소 체계와 TCP 프로토콜을 사용하여 소켓을 생성합니다.
# server_socket.bind((host, port)): 서버 소켓을 지정된 호스트와 포트에 바인딩합니다.
# server_socket.listen(5): 소켓이 들어오는 연결을 듣도록 설정합니다. 5는 대기열의 최대 연결 수입니다.
# while True: 서버가 지속적으로 실행되도록 합니다.
# client_socket, addr = server_socket.accept(): 클라이언트의 연결을 수락하고 새로운 소켓과 주소를 반환합니다.
# handle_client(client_socket): 클라이언트 소켓을 처리하는 함수입니다

import socket

def start_server(host, port):
    server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    server_socket.bind((host, port))
    server_socket.listen(5)
    print(f"Server started on {host}:{port}")
    
    while True:
        client_socket, addr = server_socket.accept()
        print(f"Connection from {addr} has been established.")
        handle_client(client_socket)
